# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1



jobs:
  build_and_test:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
#      - restore_cache:
#          keys:
#            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
#            - v1-dependencies-

      - run: mkdir -p ~/.gradle
      - run: printenv | grep GRADLE_PROP | cut -d'=' -f 2- >> ~/.gradle/gradle.properties
      - run: echo "org.gradle.daemon=false" >> ~/.gradle/gradle.properties && echo "org.gradle.java.home=$JAVA_HOME" >> ~/.gradle/gradle.properties
      - run: echo "gradle.properties keys" && cat ~/.gradle/gradle.properties | cut -d'=' -f 1

#      - run: ./gradlew dependencies

#      - save_cache:
#          paths:
#            - ~/.gradle
#          key: v1-dependencies-{{ checksum "build.gradle" }}

      - run: ./gradlew clean build
      - run: cat ./build/manifest/gradle-extended-info-plugin.properties
      - run: if [ "$BRANCH" == "master" ]; then ./gradlew clean verifyRelease createRelease; fi
      - run: if [ "$BRANCH" == "master" ]; then ./gradlew clean build; fi
      - run: if [ "$BRANCH" == "master" ]; then git push --tags; fi
      - run: if [ "$BRANCH" == "master" ]; then ./gradlew bintrayUpload; fi
      - run: if [ "$BRANCH" == "master" ]; then ./gradlew publishPlugins; fi



workflows:
  build_and_test:
    jobs:
      - build:
          context: boxhead-builds